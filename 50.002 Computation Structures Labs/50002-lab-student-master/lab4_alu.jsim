.subckt adder32alu ALUFN[0] a[31:0] b[31:0] s[31:0] z v n
*circuit to produce xb
Xb b[31:0] ALUFN0#32 xb[31:0] xor2

*circuit for 32 bit adder
Xbit0 a0 xb0 ALUFN0 s0 c0 FA
Xbit a[30:1] xb[30:1] c[29:0] s[30:1] c[30:1] FA
Xbit31 a31 xb31 c30 s31 constant0 FA

*circuit for z
Xz1 s[3:0] z0 or4
Xz2 s[7:4] z1 or4
Xz3 s[11:8] z2 or4
Xz4 s[15:12] z3 or4
Xz5 s[19:16] z4 or4
Xz6 s[23:20] z5 or4
Xz7 s[27:24] z6 or4
Xz8 s[31:28] z7 or4

Xz11 z[3:0] z00 or4
Xz12 z[7:4] z01 or4
Xz21 z00 z01 z nor2

*circuit for v
Xv0 s31 ns31 inverter
Xv01 a31 na31 inverter
Xv02 xb31 nxb31 inverter

Xv1 a31 xb31 ns31 v21 and3
Xv2 na31 nxb31 s31 v22 and3

Xv3 v21 v22 v or2

*circuit for n
.connect s31 n

.ends

.subckt compare32 ALUFN[2:1] z v n cmp[31:0]
*higher bit is zero
.connect cmp[31:1] 0

*output for lt
Xnv n v nv xor2

*output for lte
Xznv z nv znv or2

Xcmp0 ALUFN1 ALUFN2 0 z nv znv cmp0 mux4
.ends

*Boolean circuit
.subckt boole32 ALUFN[3:0] A[31:0] B[31:0] boole[31:0]
Xbool A[31:0] B[31:0] ALUFN0#32 ALUFN1#32 ALUFN2#32 ALUFN3#32 boole[31:0] mux4
.ends

* 32-bit shifter
.subckt shift32 ALUFN[1:0] A[31:0] B[4:0] shift[31:0]
* circuit for shift left
Xw1 B4#16 A[31:16] A[15:0] w[31:16] mux2
Xw2 B4#16 A[15:0] 0#16 w[15:0] mux2

Xx1 B3#24 w[31:8] w[23:0] x[31:8] mux2
Xx2 B3#8 w[7:0] 0#8 x[7:0] mux2

Xy1 B2#28 x[31:4] x[27:0] y[31:4] mux2
Xy2 B2#4 x[3:0] 0#4 y[3:0] mux2

Xz1 B1#30 y[31:2] y[29:0] z[31:2] mux2
Xz2 B1#2 y[1:0] 0#2 z[1:0] mux2

Xsl1 B0#31 z[31:1] z[30:0] sl[31:1] mux2
Xsl2 B0#1 z0 0#1 sl0 mux2

*circuit for shift right

Xbitin ALUFN1 0 A31 bitin mux2

Xwp2 B4#16 A[31:16] bitin#16 wp[31:16] mux2
Xwp1 B4#16 A[15:0] A[31:16] wp[15:0] mux2

Xxp2 B3#8 wp[31:24] bitin#8 xp[31:24] mux2
Xxp1 B3#24 wp[23:0] wp[31:8] xp[23:0] mux2

Xyp2 B2#4 xp[31:28] bitin#4 yp[31:28] mux2
Xyp1 B2#28 xp[27:0] xp[31:4] yp[27:0] mux2

Xzp2 B1#2 yp[31:30] bitin#2 zp[31:30] mux2
Xzp1 B1#30 yp[29:0] yp[31:2] zp[29:0] mux2

Xsr2 B0#1 zp31 bitin sr31  mux2
Xsr1 B0#31 zp[30:0] zp[31:1] sr[30:0] mux2

Xsh ALUFN0#32 sl[31:0] sr[31:0] shift[31:0] mux2

.ends


* circuit for alu
.subckt alu ALUFN[5:0] A[31:0] B[31:0] alu[31:0] z v n
Xadd ALUFN0 A[31:0] B[31:0] s[31:0] z v n adder32alu
.connect m[31:0] 0
Xarith ALUFN1#32 s[31:0] m[31:0] arith[31:0] mux2
Xboole ALUFN[3:0] A[31:0] B[31:0] boole[31:0] boole32
Xshift ALUFN[1:0] A[31:0] B[4:0] shift[31:0] shift32
Xcmp ALUFN[2:1] z v n cmp[31:0] compare32
Xalu ALUFN4#32 ALUFN5#32 arith[31:0] boole[31:0] shift[31:0] cmp[31:0] alu[31:0] mux4
.ends